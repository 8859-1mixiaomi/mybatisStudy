<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TeacherMapper">
    <!--
  思路:
      1. 从学生表和老师表中查出学生id，学生姓名，老师姓名
      2. 对查询出来的操作做结果集映射
          1. 集合的话，使用collection！
              JavaType和ofType都是用来指定对象类型的
              JavaType是用来指定pojo中属性的类型
              ofType指定的是映射到list集合属性中pojo的类型。
  -->
    
    <select id="getTeacher" resultMap="TheacherStudent">
       select s.*, t.*
          from students s,teachers t
          where s.did = t.did and t.eid=#{eId}
    </select>
    
    <resultMap id="TheacherStudent" type="Teacher">
        <result property="eName" column="ename"/>
        <collection property="student" ofType="Student">
            <!--<result property="sid" column="sid"/>-->
            <result property="sName" column="sname"/>
            <result property="cid" column="cid"/>
        </collection>
    </resultMap>
    

    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from teachers where eid = #{eId}
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">
        <!--column是一对多的外键 , 写的是一的主键的列名-->
        <collection property="student" javaType="ArrayList" ofType="Student" column="Did" select="getStudentByTeacherId"/>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        select * from students where sid = #{sid}
    </select>

</mapper>